程序漏洞：

执行static struct tables *read_table_info(char *fullpath)时
当表过大时，会切分为多个文件，而文件的命名规范为下划线加数字（例如_1），而当如果文件不是那么大，则不会切分文件，即所以此种情况下，表文件不会有下划线，这就出现了一个问题，如果一个表的名字就为表名+下划线+数字，且表不切分成多个文件，就会出现把表的name修改。
解决方法，把数据库中的所有表名全部放到一个文件中，然后扫描这个文件，把表名+下划线+数字的特殊表，放入一个结构中，
{
	int tables_num；
	char **tables_name;
}
然后根据目录下的文件名计算出表，如果表内的文件数量为1，则进行与特殊文件名的存储结构进行对比，得出结果。

如果数据库中有两个表，一个表名为table，另一个表名为table_1,但恰恰table表过大，拆分成table_1，table_2,但是另一个表table_1却没有拆分，这就产生了冲突。

如果系统表中有表名为table_1 table_2，恰恰这两个表都不需要拆分，则会误处理，当成一个表。

需求：
对于在ADB导入工具的启动输入参数命令中，需要输入用户名，数据库，服务器ip和端口号，以及需要导入表的存放目录等信息，相对输入参数较多，因此可用配置文件来解决此问题。



